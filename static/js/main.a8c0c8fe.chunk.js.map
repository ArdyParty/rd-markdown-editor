{"version":3,"sources":["editContext.jsx","components/MarkdownInput.jsx","components/MarkdownResult.jsx","App.jsx","index.jsx"],"names":["React","createContext","markdownText","setMarkdownText","Container","styled","div","_templateObject","Title","_templateObject2","TextArea","textarea","_templateObject3","MarkdownInput","props","useContext","editContext","react_default","a","createElement","onChange","evt","newValue","currentTarget","value","MarkdownResult_templateObject","MarkdownResult_templateObject2","ResultArea","MarkdownResult_templateObject3","MarkdownResult","MarkdownResult_Container","MarkdownResult_Title","react_markdown_default","source","AppContainer","App_templateObject","App_templateObject2","EditContainer","App_templateObject3","App","_useState","useState","_useState2","Object","slicedToArray","contextValue","Provider","App_Title","rootElement","document","getElementById","ReactDOM","render","StrictMode"],"mappings":"oKAOeA,MAAMC,cALE,CACrBC,aAAc,yBACdC,gBAAiB,uqBCAnB,IAAMC,EAAYC,IAAOC,IAAVC,KAQTC,EAAQH,IAAOC,IAAVG,KASLC,EAAWL,IAAOM,SAAVC,KAUP,SAASC,EAAcC,GAAO,IAC3BX,EAAoBY,qBAAWC,GAA/Bb,gBAOR,OACEc,EAAAC,EAAAC,cAACf,EAAD,KACEa,EAAAC,EAAAC,cAACX,EAAD,sBACAS,EAAAC,EAAAC,cAACT,EAAD,CAAUU,SARQ,SAAAC,GACpB,IAAMC,EAAWD,EAAIE,cAAcC,MACnCrB,EAAgBmB,gnBC/BpB,IAAMlB,EAAYC,IAAOC,IAAVmB,KAOTjB,EAAQH,IAAOC,IAAVoB,KASLC,EAAatB,IAAOC,IAAVsB,KAST,SAASC,EAAef,GAAO,IAC5BZ,EAAiBa,qBAAWC,GAA5Bd,aAER,OACEe,EAAAC,EAAAC,cAACW,EAAD,KACEb,EAAAC,EAAAC,cAACY,EAAD,uBACAd,EAAAC,EAAAC,cAACQ,EAAD,KACEV,EAAAC,EAAAC,cAACa,EAAAd,EAAD,CAAee,OAAQ/B,4eC9B/B,IAAMgC,EAAe7B,IAAOC,IAAV6B,KAQZ3B,EAAQH,IAAOC,IAAV8B,KAQLC,EAAgBhC,IAAOC,IAAVgC,KAMJ,SAASC,IAAM,IAAAC,EACYC,mBAAS,IADrBC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAGtBK,EAAe,CACnB3C,aAJ0BwC,EAAA,GAK1BvC,gBAL0BuC,EAAA,IAQ5B,OACEzB,EAAAC,EAAAC,cAACH,EAAY8B,SAAb,CAAsBtB,MAAOqB,GAC3B5B,EAAAC,EAAAC,cAACe,EAAD,KACEjB,EAAAC,EAAAC,cAAC4B,EAAD,qCACA9B,EAAAC,EAAAC,cAACkB,EAAD,KACEpB,EAAAC,EAAAC,cAACN,EAAD,MACAI,EAAAC,EAAAC,cAACU,EAAD,SCtCV,IAAMmB,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OACPnC,EAAAC,EAAAC,cAACF,EAAAC,EAAMmC,WAAP,KACEpC,EAAAC,EAAAC,cAACoB,EAAD,OAEFS","file":"static/js/main.a8c0c8fe.chunk.js","sourcesContent":["import React from \"react\";\n\nconst defaultContext = {\n  markdownText: \"WRITE ON ME, I LIKE IT\",\n  setMarkdownText: () => {}\n};\n\nexport default React.createContext(defaultContext);\n","import React, { useContext } from \"react\";\nimport styled from \"styled-components\";\nimport editContext from \"../editContext\";\n\nconst Container = styled.div`\n  width: 50%;\n  height: 100%;\n  padding: 10px;\n  border-right: 2px solid rgba(20, 20, 20, 0.2);\n  font-family: \"Lato\", sans-serif;\n`;\n\nconst Title = styled.div`\n  font-size: 25px;\n  font-weight: 500;\n  margin-bottom: 12px;\n  text-align: center;\n  padding: 10px 0;\n  border-bottom: 1px solid rgba(20, 20, 20, 0.2);\n`;\n\nconst TextArea = styled.textarea`\n  width: 100%;\n  height: 100%;\n  border: none;\n  outline: none;\n  font-size: 14px;\n  background-color: rgba(255,255,255,0.4);\n  border-radius: 10px;\n`;\n\nexport function MarkdownInput(props) {\n  const { setMarkdownText } = useContext(editContext);\n\n  const onInputChange = evt => {\n    const newValue = evt.currentTarget.value;\n    setMarkdownText(newValue);\n  };\n\n  return (\n    <Container>\n      <Title>Markdown Text</Title>\n      <TextArea onChange={onInputChange} />\n    </Container>\n  );\n}\n","import React, { useContext } from \"react\";\nimport styled from \"styled-components\";\nimport ReactMarkdown from \"react-markdown\";\nimport editContext from \"../editContext\";\n\nconst Container = styled.div`\n  width: 50%;\n  height: 100%;\n  padding: 10px;\n  font-family: \"Lato\", sans-serif;\n`;\n\nconst Title = styled.div`\n  font-size: 25px;\n  font-weight: 500;\n  text-align: center;\n  margin-bottom: 12px;\n  padding: 10px 0;\n  border-bottom: 1px solid rgba(20, 20, 20, 0.2);\n`;\n\nconst ResultArea = styled.div`\n  width: 100%;\n  height: 100%;\n  border: none;\n  font-size: 14px;\n  background-color: rgba(255,255,255,0.4);\n  border-radius: 10px;\n`;\n\nexport function MarkdownResult(props) {\n  const { markdownText } = useContext(editContext);\n\n  return (\n    <Container>\n      <Title>Converted Text</Title>\n      <ResultArea>\n        <ReactMarkdown source={markdownText} />\n      </ResultArea>\n    </Container>\n  );\n}\n","import React, { useState } from \"react\";\nimport \"./styles.css\";\nimport styled from \"styled-components\";\nimport { MarkdownInput } from \"./components/MarkdownInput\";\nimport { MarkdownResult } from \"./components/MarkdownResult\";\nimport EditContext from \"./editContext\";\n\nconst AppContainer = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nconst Title = styled.div`\n  font-size: 40px;\n  font-weight: 500;\n  font-family: \"Lato\", sans-serif;\n  margin-bottom: 30px;\n  padding: 20px 0;\n`;\n\nconst EditContainer = styled.div`\n  width: 90%;\n  height: 100%;\n  display: flex;\n`;\n\nexport default function App() {\n  const [markdownText, setMarkdownText] = useState(\"\");\n\n  const contextValue = {\n    markdownText,\n    setMarkdownText\n  };\n\n  return (\n    <EditContext.Provider value={contextValue}>\n      <AppContainer>\n        <Title>Ardy Party's Markdown Editor</Title>\n        <EditContainer>\n          <MarkdownInput />\n          <MarkdownResult />\n        </EditContainer>\n      </AppContainer>\n    </EditContext.Provider>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}